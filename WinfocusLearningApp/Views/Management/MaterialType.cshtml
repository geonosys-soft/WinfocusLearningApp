@*@model WinfocusLearningApp.DataEntity.TblMaterialManagement*@
@{
    ViewBag.Title = "Material Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    :root {
        --primary-color: #4361ee;
        --primary-hover: #3a56d4;
        --secondary-color: #3f37c9;
        --danger-color: #f72585;
        --danger-hover: #e5177b;
        --success-color: #4cc9f0;
        --success-hover: #2fb5e0;
        --text-color: #2b2d42;
        --light-bg: #f8f9fa;
    }

    body {
        background-image: url('https://www.transparenttextures.com/patterns/cubes.png');
        background-attachment: fixed;
        margin: 0;
        padding: 0;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: var(--text-color);
        min-height: 100vh;
    }

    .top-bar {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 20px 0;
        margin-bottom: 40px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        position: relative;
        overflow: hidden;
    }

        .top-bar::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #4cc9f0, #f72585, #7209b7);
        }

        .top-bar h1 {
            margin: 0;
            padding: 0 30px;
            font-weight: 600;
            text-shadow: 1px 1px 3px rgba(0,0,0,0.2);
        }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px;
    }

    .action-container {
        display: flex;
        justify-content: center;
        gap: 30px;
        margin-top: 40px;
        flex-wrap: wrap;
    }

    .action-box {
        background: white;
        border-radius: 12px;
        padding: 40px 30px;
        width: 280px;
        text-align: center;
        box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        position: relative;
        overflow: hidden;
        border: none;
    }

        .action-box:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 24px rgba(0,0,0,0.15);
        }

        .action-box.insert {
            border-top: 4px solid var(--success-color);
        }

        .action-box.edit {
            border-top: 4px solid var(--primary-color);
        }

        .action-box.delete {
            border-top: 4px solid var(--danger-color);
        }

    .action-icon {
        font-size: 56px;
        margin-bottom: 20px;
        transition: transform 0.3s;
    }

    .action-box:hover .action-icon {
        transform: scale(1.1);
    }

    .action-title {
        font-weight: 600;
        font-size: 24px;
        margin-bottom: 15px;
    }

    .action-desc {
        color: #6c757d;
        font-size: 16px;
    }

    .form-container {
        max-width: 800px;
        margin: 40px auto;
        background: white;
        padding: 40px;
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0,0,0,0.1);
        animation: fadeIn 0.5s ease-out;
        border-top: 4px solid var(--primary-color);
    }

    #insert-form {
        display: block;
    }

    #edit-form, #delete-form {
        display: none;
    }

    .form-container h3 {
        margin-top: 0;
        color: var(--primary-color);
        font-size: 24px;
        margin-bottom: 25px;
        position: relative;
        padding-bottom: 10px;
    }

        .form-container h3::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 3px;
            background: var(--primary-color);
        }

    .form-group {
        margin-bottom: 25px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

    .form-control {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 16px;
        transition: border-color 0.3s;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        }

    .btn {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 16px;
        font-weight: 500;
        transition: all 0.3s;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

        .btn:hover {
            background-color: var(--primary-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .btn i {
            margin-right: 8px;
        }

    .btn-submit {
        background-color: var(--success-color);
    }

        .btn-submit:hover {
            background-color: var(--success-hover);
        }

    .btn-delete {
        background-color: var(--danger-color);
    }

        .btn-delete:hover {
            background-color: var(--danger-hover);
        }

    .close-btn {
        position: absolute;
        top: 15px;
        right: 15px;
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;
        color: #6c757d;
        transition: color 0.3s;
    }

        .close-btn:hover {
            color: var(--danger-color);
        }

    .floating-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        background: white;
        padding: 15px 25px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        display: flex;
        align-items: center;
        z-index: 1000;
        transform: translateX(150%);
        transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

        .floating-notification.show {
            transform: translateX(0);
        }

    .notification-icon {
        margin-right: 10px;
        font-size: 24px;
    }

    .notification-success {
        border-left: 4px solid var(--success-color);
    }

    .notification-error {
        border-left: 4px solid var(--danger-color);
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .form-col {
        flex: 1;
        min-width: 250px;
    }
</style>

<div class="top-bar">
    <h1><i class="fas fa-book"></i> Material Management</h1>
</div>

<div class="container">
    <div class="action-container">
        <div class="action-box insert" onclick="showForm('insert')">
            <div class="action-icon">➕</div>
            <div class="action-title">Add Material</div>
            <div class="action-desc">Create a new material record</div>
        </div>

        <div class="action-box edit" onclick="showForm('edit')">
            <div class="action-icon">✏️</div>
            <div class="action-title">Edit Material</div>
            <div class="action-desc">Modify existing material</div>
        </div>

        <div class="action-box delete" onclick="showForm('delete')">
            <div class="action-icon">🗑️</div>
            <div class="action-title">Remove Material</div>
            <div class="action-desc">Delete material record</div>
        </div>
    </div>

    <!-- Insert Form (shown by default) -->
    <div id="insert-form" class="form-container">
        <h3><i class="fas fa-plus-circle"></i> Add Material</h3>
        <div class="form-row">
            <div class="form-col">
                <div class="form-group">
                    <label for="insert-academic-year">Academic Year:</label>
                    <select id="insert-academic-year" class="form-control" required>
                        <option value="">-- Select Academic Year --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="insert-syllabus">Syllabus:</label>
                    <select id="insert-syllabus" class="form-control" required>
                        <option value="">-- Select Syllabus --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="insert-class">Class:</label>
                    <select id="insert-class" class="form-control" required>
                        <option value="">-- Select Class --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
            </div>
            <div class="form-col">
                <div class="form-group">
                    <label for="insert-stream">Stream:</label>
                    <select id="insert-stream" class="form-control" required>
                        <option value="">-- Select Stream --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="insert-course">Course:</label>
                    <select id="insert-course" class="form-control" required>
                        <option value="">-- Select Course --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="insert-subject">Subject:</label>
                    <select id="insert-subject" class="form-control" required>
                        <option value="">-- Select Subject --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="insert-note-type">Note Type:</label>
            <select id="insert-note-type" class="form-control" required>
                <option value="">-- Select Note Type --</option>
                <!-- Fetched from database -->
            </select>
        </div>
        <div class="form-group">
            <label for="insert-material-type">Material Type:</label>
            <input type="text" id="insert-material-type" class="form-control" placeholder="Enter material type" required>
        </div>
        <button type="button" class="btn btn-submit" onclick="submitForm('insert')">
            <i class="fas fa-check"></i> Save
        </button>
    </div>

    <!-- Edit Form -->
    <div id="edit-form" class="form-container">
        <button class="close-btn" onclick="hideForm('edit')">×</button>
        <h3><i class="fas fa-edit"></i> Edit Material</h3>
        <div class="form-row">
            <div class="form-col">
                <div class="form-group">
                    <label for="edit-academic-year">Academic Year:</label>
                    <select id="edit-academic-year" class="form-control" required>
                        <option value="">-- Select Academic Year --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="edit-syllabus">Syllabus:</label>
                    <select id="edit-syllabus" class="form-control" required>
                        <option value="">-- Select Syllabus --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="edit-class">Class:</label>
                    <select id="edit-class" class="form-control" required>
                        <option value="">-- Select Class --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
            </div>
            <div class="form-col">
                <div class="form-group">
                    <label for="edit-stream">Stream:</label>
                    <select id="edit-stream" class="form-control" required>
                        <option value="">-- Select Stream --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="edit-course">Course:</label>
                    <select id="edit-course" class="form-control" required>
                        <option value="">-- Select Course --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="edit-subject">Subject:</label>
                    <select id="edit-subject" class="form-control" required>
                        <option value="">-- Select Subject --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="edit-note-type">Note Type:</label>
            <select id="edit-note-type" class="form-control" required>
                <option value="">-- Select Note Type --</option>
                <!-- Fetched from database -->
            </select>
        </div>
        <div class="form-group">
            <label for="edit-material-type">Material Type:</label>
            <select id="edit-material-type" class="form-control" required>
                <option value="">-- Select Material Type --</option>
                <!-- Fetched from database -->
            </select>
        </div>
        <div class="form-group">
            <label for="edit-new-material-type">New Material Type:</label>
            <input type="text" id="edit-new-material-type" class="form-control" placeholder="Enter new material type" required>
        </div>
        <button type="button" class="btn" onclick="submitForm('edit')">
            <i class="fas fa-save"></i> Update
        </button>
    </div>

    <!-- Delete Form -->
    <div id="delete-form" class="form-container">
        <button class="close-btn" onclick="hideForm('delete')">×</button>
        <h3><i class="fas fa-trash-alt"></i> Delete Material</h3>
        <div class="form-row">
            <div class="form-col">
                <div class="form-group">
                    <label for="delete-academic-year">Academic Year:</label>
                    <select id="delete-academic-year" class="form-control" required>
                        <option value="">-- Select Academic Year --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="delete-syllabus">Syllabus:</label>
                    <select id="delete-syllabus" class="form-control" required>
                        <option value="">-- Select Syllabus --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="delete-class">Class:</label>
                    <select id="delete-class" class="form-control" required>
                        <option value="">-- Select Class --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
            </div>
            <div class="form-col">
                <div class="form-group">
                    <label for="delete-stream">Stream:</label>
                    <select id="delete-stream" class="form-control" required>
                        <option value="">-- Select Stream --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="delete-course">Course:</label>
                    <select id="delete-course" class="form-control" required>
                        <option value="">-- Select Course --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="delete-subject">Subject:</label>
                    <select id="delete-subject" class="form-control" required>
                        <option value="">-- Select Subject --</option>
                        <!-- Fetched from database -->
                    </select>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="delete-note-type">Note Type:</label>
            <select id="delete-note-type" class="form-control" required>
                <option value="">-- Select Note Type --</option>
                <!-- Fetched from database -->
            </select>
        </div>
        <div class="form-group">
            <label for="delete-material-type">Material Type:</label>
            <select id="delete-material-type" class="form-control" required>
                <option value="">-- Select Material Type --</option>
                <!-- Fetched from database -->
            </select>
        </div>
        <div class="form-group">
            <label>
                <input type="checkbox" id="confirm-delete" required> I confirm I want to delete this material
            </label>
        </div>
        <button type="button" class="btn btn-delete" onclick="submitForm('delete')" disabled>
            <i class="fas fa-trash"></i> Delete
        </button>
    </div>
</div>

<!-- Notification -->
<div id="notification" class="floating-notification">
    <div class="notification-icon"></div>
    <div class="notification-message"></div>
</div>

<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<script>
    // Show form function
    function showForm(formType) {
        // Hide all forms first
        document.querySelectorAll('.form-container').forEach(form => {
            form.style.display = 'none';
        });

        // Show the selected form
        const form = document.getElementById(formType + '-form');
        form.style.display = 'block';
       
        formClear();
        // Scroll to form
        form.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }

    // Hide form function
    function hideForm(formType) {
        document.getElementById(formType + '-form').style.display = 'none';
        document.getElementById('insert-form').style.display = 'block';
    }

    // Delete confirmation toggle
    document.getElementById('confirm-delete').addEventListener('change', function() {
        document.querySelector('#delete-form .btn').disabled = !this.checked;
    });
    // Initialize dropdowns for insert form on page load
    document.addEventListener('DOMContentLoaded', function () {
        loadAcademicYears();
    });
   
    // Submit form function
    async function submitForm(formType) {
        const notification = document.getElementById('notification');
        const notificationIcon = notification.querySelector('.notification-icon');
        const notificationMsg = notification.querySelector('.notification-message');
        let message;

        try {
            switch (formType) {
                case 'insert':
                    // Get all form values
                    const academicYearId = document.getElementById('insert-academic-year').value;
                    const syllabusId = document.getElementById('insert-syllabus').value;
                    const classId = document.getElementById('insert-class').value;
                    const streamId = document.getElementById('insert-stream').value;
                    const courseId = document.getElementById('insert-course').value;
                    const subjectId = document.getElementById('insert-subject').value;
                    const noteTypeId = document.getElementById('insert-note-type').value;
                    const materialType = document.getElementById('insert-material-type').value.trim();

                    // Validate all fields
                    if (!academicYearId || !syllabusId || !classId || !streamId || !courseId || !subjectId || !noteTypeId || !materialType) {
                        showNotification('Please fill all fields', 'error');
                        return;
                    }

                    // Prepare data for API
                    const materialData = {
                        ACID: academicYearId,
                        SyllabusID: syllabusId,
                        GradeID: classId,
                        StreamID: streamId,
                        CourseId: courseId,
                        SubjectId: subjectId,
                        NoteTypeId: noteTypeId,
                        MaterialType: materialType
                    };

                    // Call API to save material
                    const response = await fetch('/api/ManagementApi/AddMaterial', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(materialData)
                    });

                    if (!response.ok) {
                        throw new Error('Failed to save material');
                    }

                    // Show success message
                    message = 'Material added successfully!';
                    showNotification(message, 'success');

                    // Clear form
                    document.getElementById('insert-material-type').value = '';
                    break;

                case 'edit':
                    // Get all form values
                    const editAcademicYearId = document.getElementById('edit-academic-year').value;
                    const editSyllabusId = document.getElementById('edit-syllabus').value;
                    const editClassId = document.getElementById('edit-class').value;
                    const editStreamId = document.getElementById('edit-stream').value;
                    const editCourseId = document.getElementById('edit-course').value;
                    const editSubjectId = document.getElementById('edit-subject').value;
                    const editNoteTypeId = document.getElementById('edit-note-type').value;
                    const editMaterialTypeId = document.getElementById('edit-material-type').value;
                    const newMaterialType = document.getElementById('edit-new-material-type').value.trim();

                    // Validate all fields
                    if (!editAcademicYearId || !editSyllabusId || !editClassId || !editStreamId ||
                        !editCourseId || !editSubjectId || !editNoteTypeId || !editMaterialTypeId || !newMaterialType) {
                        showNotification('Please fill all fields', 'error');
                        return;
                    }

                    // Prepare data for API
                    const editData = {
                        Id: editMaterialTypeId,
                        AcademicYearId: editAcademicYearId,
                        SyllabusId: editSyllabusId,
                        ClassId: editClassId,
                        StreamId: editStreamId,
                        CourseId: editCourseId,
                        SubjectId: editSubjectId,
                        NoteTypeId: editNoteTypeId,
                        MaterialType: newMaterialType
                    };

                    // Call API to update material
                    const editResponse = await fetch('/api/ManagementApi/UpdateMaterial', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(editData)
                    });

                    if (!editResponse.ok) {
                        throw new Error('Failed to update material');
                    }

                    // Show success message
                    message = 'Material updated successfully!';
                    showNotification(message, 'success');

                    // Clear form
                    document.getElementById('edit-new-material-type').value = '';
                    hideForm('edit');
                    break;

                case 'delete':
                    // Get all form values
                    const deleteAcademicYearId = document.getElementById('delete-academic-year').value;
                    const deleteSyllabusId = document.getElementById('delete-syllabus').value;
                    const deleteClassId = document.getElementById('delete-class').value;
                    const deleteStreamId = document.getElementById('delete-stream').value;
                    const deleteCourseId = document.getElementById('delete-course').value;
                    const deleteSubjectId = document.getElementById('delete-subject').value;
                    const deleteNoteTypeId = document.getElementById('delete-note-type').value;
                    const deleteMaterialTypeId = document.getElementById('delete-material-type').value;

                    // Validate all fields
                    if (!deleteAcademicYearId || !deleteSyllabusId || !deleteClassId || !deleteStreamId ||
                        !deleteCourseId || !deleteSubjectId || !deleteNoteTypeId || !deleteMaterialTypeId) {
                        showNotification('Please fill all fields', 'error');
                        return;
                    }

                    // Confirm deletion
                    if (!confirm('Are you sure you want to delete this material?')) {
                        return;
                    }

                    // Call API to delete material
                    const deleteResponse = await fetch(`/api/ManagementApi/DeleteMaterial/${deleteMaterialTypeId}`, {
                        method: 'DELETE'
                    });

                    if (!deleteResponse.ok) {
                        throw new Error('Failed to delete material');
                    }

                    // Show success message
                    message = 'Material deleted successfully!';
                    showNotification(message, 'success');

                    // Clear form
                    document.getElementById('confirm-delete').checked = false;
                    document.querySelector('#delete-form .btn').disabled = true;
                    hideForm('delete');
                    break;
            }
        } catch (error) {
            showNotification('Something went wrong', 'error');
            console.error('Error submitting form:', error);
        }
    }

    // Show notification function
    function showNotification(message, type) {
        const notification = document.getElementById('notification');
        const notificationIcon = notification.querySelector('.notification-icon');
        const notificationMsg = notification.querySelector('.notification-message');

        // Clear previous classes
        notification.className = 'floating-notification';
        notification.classList.add('show', `notification-${type}`);

        // Set icon and message
        if (type === 'success') {
            notificationIcon.innerHTML = '<i class="fas fa-check-circle"></i>';
            notificationIcon.style.color = '#4cc9f0';
        } else {
            notificationIcon.innerHTML = '<i class="fas fa-exclamation-circle"></i>';
            notificationIcon.style.color = '#f72585';
        }

        notificationMsg.textContent = message;

        // Auto hide after 5 seconds
        setTimeout(() => {
            notification.classList.remove('show');
        }, 5000);
    }

    // Close notification when clicked
    document.getElementById('notification').addEventListener('click', function() {
        this.classList.remove('show');
    });

    // Load academic years from database
    async function loadAcademicYears() {
        try {
            const response = await fetch('/api/ManagementApi/FetchAccademicYear');
            const data = await response.json();

            const dropdownIds = ['insert-academic-year', 'edit-academic-year', 'delete-academic-year'];

            dropdownIds.forEach(id => {
                const dropdown = document.getElementById(id);
                dropdown.innerHTML = '<option value="">-- Select Academic Year --</option>';

                data.forEach(year => {
                    const option = document.createElement('option');
                    option.value = year.Id;
                    option.textContent = year.AccademicYear;
                    dropdown.appendChild(option);
                });
            });
        } catch (error) {
            showNotification('Failed to load academic years', 'error');
            console.error('Error loading academic years:', error);
        }
    }

    function loadSyllabusOptions(academicYearId, targetSelectId) {
        if (!academicYearId) return;
        //showNotification('Failed to load academic years'+academicYearId, 'error');
        fetch(`/api/ManagementApi/FetchSyllabus/${academicYearId}`)
            .then(response => response.json())
            .then(data => {
                const select = document.getElementById(targetSelectId);
                select.innerHTML = '<option value="">-- Select Syllabus --</option>';
                data.forEach(syllabus => {
                    const option = document.createElement('option');
                    option.value = syllabus.Id;
                    option.textContent = syllabus.Name || syllabus.Name.substring(0, 50) + '...';
                    select.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error loading syllabus:', error);
                showNotification('Failed to load syllabus', 'error');
            });
    }

    // Load class data when syllabus is selected
    function loadClassOptions(SLBID, targetSelectId) {
        if (!SLBID) return;
        //showNotification('Failed to load academic years'+academicYearId, 'error');
        fetch(`/api/ManagementApi/FetchGrade/${SLBID}`)
            .then(response => response.json())
            .then(data => {
                const select = document.getElementById(targetSelectId);
                select.innerHTML = '<option value="">-- Select Syllabus --</option>';
                data.forEach(syllabus => {
                    const option = document.createElement('option');
                    option.value = syllabus.Id;
                    option.textContent = syllabus.Name || syllabus.Name.substring(0, 50) + '...';
                    select.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error loading class:', error);
                showNotification('Failed to load class', 'error');
            });
    }

    // Load Stream data when grade is selected
    function loadStreamOptions(classId, targetSelectId) {
        if (!classId) return;
        //showNotification('Failed to load academic years'+academicYearId, 'error');
        fetch(`/api/ManagementApi/FetchStream/${classId}`)
            .then(response => response.json())
            .then(data => {
                const select = document.getElementById(targetSelectId);
                select.innerHTML = '<option value="">-- Select Syllabus --</option>';
                data.forEach(syllabus => {
                    const option = document.createElement('option');
                    option.value = syllabus.Id;
                    option.textContent = syllabus.Name || syllabus.Name.substring(0, 50) + '...';
                    select.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error loading Stream:', error);
                showNotification('Failed to load Stream', 'error');
            });
    }
    // Load Stream data when grade is selected
    function loadCourseOptions(streamId, targetSelectId) {
        if (!streamId) return;
        //showNotification('Failed to load academic years'+academicYearId, 'error');
        fetch(`/api/ManagementApi/FetchCourse//${streamId}`)
            .then(response => response.json())
            .then(data => {
                const select = document.getElementById(targetSelectId);
                select.innerHTML = '<option value="">-- Select Syllabus --</option>';
                data.forEach(syllabus => {
                    const option = document.createElement('option');
                    option.value = syllabus.Id;
                    option.textContent = syllabus.Name || syllabus.Name.substring(0, 50) + '...';
                    select.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error loading Course:', error);
                showNotification('Failed to load Course', 'error');
            });
    }
    //LOAD SUBJECTS
    function loadSubjectOptions(CourseId, targetSelectId) {
        if (!CourseId) return;
        //showNotification('Failed to load academic years'+academicYearId, 'error');
        fetch(`/api/ManagementApi/FetchSubject/${CourseId}`)
            .then(response => response.json())
            .then(data => {
                const select = document.getElementById(targetSelectId);
                select.innerHTML = '<option value="">-- Select Syllabus --</option>';
                data.forEach(syllabus => {
                    const option = document.createElement('option');
                    option.value = syllabus.Id;
                    option.textContent = syllabus.Name || syllabus.Name.substring(0, 50) + '...';
                    select.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error loading Subject:', error);
                showNotification('Failed to load Subject', 'error');
            });
    }
    //LOAD SUBJECTS
    function loadNoteTypeOptions(SubjectID, targetSelectId) {
        if (!SubjectID) return;
        //showNotification('Failed to load academic years'+academicYearId, 'error');
        fetch(`/api/ManagementApi/FetchNoteType/${SubjectID}`)
            .then(response => response.json())
            .then(data => {
                const select = document.getElementById(targetSelectId);
                select.innerHTML = '<option value="">-- Select Syllabus --</option>';
                data.forEach(syllabus => {
                    const option = document.createElement('option');
                    option.value = syllabus.Id;
                    option.textContent = syllabus.Name || syllabus.Name.substring(0, 50) + '...';
                    select.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error loading Note type:', error);
                showNotification('Failed to load Note type', 'error');
            });
    }
    function formClear() {
        document.getElementById('insert-academic-year').value = '';
        document.getElementById('edit-academic-year').value = '';
        document.getElementById('delete-academic-year').value = '';

        document.getElementById('insert-syllabus').innerHTML = '<option value="">-- Select Syllabus --</option>';
        document.getElementById('edit-syllabus').innerHTML = '<option value="">-- Select Syllabus --</option>';
        document.getElementById('delete-syllabus').innerHTML = '<option value="">-- Select Syllabus --</option>';

        document.getElementById('insert-class').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('edit-class').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('delete-class').innerHTML = '<option value="">-- Select class --</option>';

        document.getElementById('insert-stream').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('edit-stream').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('delete-stream').innerHTML = '<option value="">-- Select class --</option>';

        document.getElementById('insert-course').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('edit-course').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('delete-course').innerHTML = '<option value="">-- Select class --</option>';

        document.getElementById('insert-subject').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('edit-subject').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('delete-subject').innerHTML = '<option value="">-- Select class --</option>';

        document.getElementById('insert-note-type').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('edit-note-type').innerHTML = '<option value="">-- Select class --</option>';
        document.getElementById('delete-note-type').innerHTML = '<option value="">-- Select class --</option>';

    }
    // Event listeners for accademic year dropdowns form
    document.getElementById('insert-academic-year').addEventListener('change', function () {
        loadSyllabusOptions(this.value, 'insert-syllabus');
    });

    document.getElementById('edit-academic-year').addEventListener('change', function () {
        loadSyllabusOptions(this.value, 'edit-syllabus');
    });

    document.getElementById('delete-academic-year').addEventListener('change', function () {
        loadSyllabusOptions(this.value, 'delete-syllabus');
    });

    // Event listeners for accademic year dropdowns form
    document.getElementById('insert-syllabus').addEventListener('change', function () {
        loadClassOptions(this.value, 'insert-class');
    });

    document.getElementById('edit-syllabus').addEventListener('change', function () {
        loadClassOptions(this.value, 'edit-class');
    });

    document.getElementById('delete-syllabus').addEventListener('change', function () {
        loadClassOptions(this.value, 'delete-class');
    });

    // Event listeners for grade dropdowns form
    document.getElementById('insert-class').addEventListener('change', function () {
        loadStreamOptions(this.value, 'insert-stream');
    });

    document.getElementById('edit-class').addEventListener('change', function () {
        loadStreamOptions(this.value, 'edit-stream');
    });

    document.getElementById('delete-class').addEventListener('change', function () {
        loadStreamOptions(this.value, 'delete-stream');
    });

    document.getElementById('insert-stream').addEventListener('change', function () {
        loadCourseOptions(this.value, 'insert-course');
    });

    document.getElementById('edit-stream').addEventListener('change', function () {
        loadCourseOptions(this.value, 'edit-course');
    });

    document.getElementById('delete-stream').addEventListener('change', function () {
        loadCourseOptions(this.value, 'delete-course');
    });
    document.getElementById('insert-course').addEventListener('change', function () {
        loadSubjectOptions(this.value, 'insert-subject');
    });
    document.getElementById('edit-course').addEventListener('change', function () {
        loadSubjectOptions(this.value, 'edit-subject');
    });
    document.getElementById('delete-course').addEventListener('change', function () {
        loadSubjectOptions(this.value, 'delete-subject');
    });

    document.getElementById('edit-subject').addEventListener('change', function () {
        loadNoteTypeOptions(this.value, 'edit-note-type');
    });
    document.getElementById('delete-subject').addEventListener('change', function () {
        loadNoteTypeOptions(this.value, 'delete-note-type');
    });
    document.getElementById('insert-subject').addEventListener('change', function () {
        loadNoteTypeOptions(this.value, 'insert-note-type');
    });

</script>