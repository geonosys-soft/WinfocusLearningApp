@model WinfocusLearningApp.ViewModels.StudentRegistrationModel
@{ ViewBag.Title = "Student Registration - Winfocus Learning Centre"; Layout = "~/Views/Shared/_loginLayout.cshtml"; }

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <style>
        :root {
            --primary-color: #4361ee;
            --primary-dark: #3a54d5;
            --secondary-color: #764ba2;
            --success-color: #48bb78;
            --error-color: #f56565;
            --bg-gradient: linear-gradient(135deg, #4361ee 0%, #4361ee 100%);
            --card-shadow: 0 20px 40px rgba(102, 126, 234, 0.1);
            --text-dark: #1a202c;
            --text-medium: #2d3748;
            --text-light: #718096;
            --border-color: #e2e8f0;
            --bg-light: #f7fafc;
            --bg-white: #ffffff;
        }
        /* --- Basic & Body --- */

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: var(--bg-white);
            min-height: 100vh;
            padding: 20px 0;
            position: relative;
            overflow-x: hidden;
            color: var(--text-dark);
        }

        .container {
            max-width: 1300px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* --- Decorative Elements --- */
        .floating-shapes {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .shape {
            position: absolute;
            border-radius: 50%;
            background: rgba(102, 126, 234, 0.05);
            animation: float 6s ease-in-out infinite;
        }

            .shape:nth-child(1) {
                width: 80px;
                height: 80px;
                top: 10%;
                left: 10%;
                animation-delay: 0s;
            }

            .shape:nth-child(2) {
                width: 120px;
                height: 120px;
                top: 20%;
                right: 10%;
                animation-delay: 2s;
            }

            .shape:nth-child(3) {
                width: 60px;
                height: 60px;
                bottom: 20%;
                left: 20%;
                animation-delay: 4s;
            }

        /* --- Main Form Card & Header --- */
        .main-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            box-shadow: var(--card-shadow);
            border: 1px solid rgba(255, 255, 255, 0.2);
            overflow: hidden;
            animation: slideInUp 0.8s ease-out;
        }

        .header {
            background: var(--bg-gradient);
            color: white;
            padding: 40px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

            .header::before {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
                animation: pulse 4s ease-in-out infinite;
            }

            .header h1 {
                font-size: 2.5rem;
                font-weight: 700;
                margin-bottom: 10px;
                z-index: 1;
            }

            .header p {
                font-size: 1.1rem;
                opacity: 0.9;
                z-index: 1;
            }

        /* --- Form Sections & Layout --- */
        .form-container {
            padding: 50px;
        }

        .section {
            margin-bottom: 50px;
            animation: fadeInUp 0.6s ease-out;
            animation-fill-mode: both;
        }

            .section:nth-child(1) {
                animation-delay: 0.2s;
            }

            .section:nth-child(2) {
                animation-delay: 0.4s;
            }

            .section:nth-child(3) {
                animation-delay: 0.6s;
            }

        .section-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: #4361ee;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 3px solid transparent;
            background: linear-gradient(135deg, #4361ee 0%, #4361ee 100%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            position: relative;
        }

            .section-title::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 60px;
                height: 3px;
                background: var(--bg-gradient);
                border-radius: 2px;
                animation: expandWidth 0.8s ease-out 0.8s both;
            }

        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            margin-bottom: 30px;
        }

        .form-group {
            position: relative;
        }

        /* --- Form Inputs, Labels, Radios --- */
        .form-label {
            display: block;
            font-weight: 600;
            color: var(--text-medium);
            margin-bottom: 8px;
            font-size: 0.95rem;
        }

            .form-label.required::after {
                content: " *";
                color: var(--error-color);
                font-weight: bold;
            }

        .form-input {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid var(--border-color);
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            background: white;
            outline: none;
            color: var(--text-dark);
            font-weight: 500;
        }

            .form-input:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
                transform: translateY(-2px);
            }

            .form-input:hover {
                border-color: #cbd5e0;
            }

        .radio-group {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-top: 10px;
        }

        .radio-option {
            position: relative;
        }

            .radio-option input[type="radio"] {
                position: absolute;
                opacity: 0;
            }

        .radio-label {
            display: flex;
            align-items: center;
            cursor: pointer;
            padding: 12px 20px;
            border: 2px solid var(--border-color);
            border-radius: 50px;
            background: white;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-weight: 600;
            color: var(--text-medium);
        }

        .radio-option input[type="radio"]:checked + .radio-label {
            border-color: var(--primary-color);
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
            color: var(--primary-color);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.2);
        }

        /* --- Subject & Document Uploads --- */
        .subjects-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .subject-card {
            background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);
            border: 2px solid var(--border-color);
            border-radius: 16px;
            padding: 20px;
            transition: all 0.3s ease;
        }

            .subject-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 35px rgba(102, 126, 234, 0.15);
                border-color: var(--primary-color);
            }

            .subject-card h4 {
                color: var(--primary-color);
                font-weight: 600;
                margin-bottom: 15px;
                font-size: 1.1rem;
            }

        .subject-inputs {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .file-upload {
            position: relative;
            display: inline-block;
            width: 100%;
        }

            .file-upload input[type="file"] {
                position: absolute;
                opacity: 0;
                width: 100%;
                height: 100%;
                cursor: pointer;
            }

        .file-upload-label {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            border: 2px dashed #cbd5e0;
            border-radius: 12px;
            background: var(--bg-light);
            cursor: pointer;
            transition: all 0.3s ease;
            color: var(--text-medium);
            font-weight: 600;
        }

            .file-upload-label:hover {
                border-color: var(--primary-color);
                background: rgba(102, 126, 234, 0.05);
                color: var(--primary-color);
            }

        /* --- Checkbox & Declaration --- */
        .checkbox-group {
            margin: 20px 0;
        }

        .checkbox-option {
            position: relative;
            margin-bottom: 15px;
        }

            .checkbox-option input[type="checkbox"] {
                position: absolute;
                opacity: 0;
            }

        .checkbox-label {
            display: flex;
            align-items: flex-start;
            cursor: pointer;
            font-size: 0.95rem;
            line-height: 1.5;
            color: var(--text-medium);
            padding-left: 35px;
            position: relative;
            font-weight: 500;
        }

            .checkbox-label::before {
                content: '';
                position: absolute;
                left: 0;
                top: 2px;
                width: 20px;
                height: 20px;
                border: 2px solid #cbd5e0;
                border-radius: 6px;
                background: white;
                transition: all 0.3s ease;
            }

        .checkbox-option input[type="checkbox"]:checked + .checkbox-label::before {
            background: var(--primary-color);
            border-color: var(--primary-color);
        }

        .checkbox-label::after {
            content: '✓';
            position: absolute;
            left: 5px;
            top: 0px;
            color: white;
            font-size: 14px;
            font-weight: bold;
            opacity: 0;
            transform: scale(0.5);
            transition: all 0.3s ease;
        }

        .checkbox-option input[type="checkbox"]:checked + .checkbox-label::after {
            opacity: 1;
            transform: scale(1);
        }

        .date-display {
            background: linear-gradient(135deg, #f7fafc, #edf2f7);
            padding: 15px 20px;
            border-radius: 12px;
            border: 2px solid var(--border-color);
            font-weight: 700;
            color: var(--primary-color);
            text-align: center;
        }

        /* --- Buttons --- */
        .button-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-top: 30px;
        }

        .preview-btn, .submit-btn, .edit-btn {
            padding: 18px 40px;
            border-radius: 50px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            text-align: center;
        }

        .preview-btn {
            background: white;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
        }

            .preview-btn:hover {
                background: rgba(102, 126, 234, 0.1);
                transform: translateY(-3px);
                box-shadow: 0 10px 25px rgba(102, 126, 234, 0.2);
            }

        .submit-btn {
            background: var(--bg-gradient);
            color: white;
            border: none;
            position: relative;
            overflow: hidden;
        }

            .submit-btn:hover:not(:disabled) {
                transform: translateY(-3px);
                box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
            }

            .submit-btn:disabled {
                background: #b0bec5;
                opacity: 0.7;
                cursor: not-allowed;
                box-shadow: none;
                transform: none;
            }

        /* --- Utility & State --- */
        .error-message {
            color: var(--error-color);
            font-size: 0.85rem;
            margin-top: 5px;
            display: none;
            animation: shake 0.5s ease-in-out;
            font-weight: 600;
        }

        .hidden {
            display: none !important;
        }

        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }

        /* --- MODAL BASE STYLES --- */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(29, 38, 59, 0.8);
            backdrop-filter: blur(8px);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s ease;
        }

            .modal-overlay:not(.hidden) {
                opacity: 1;
                pointer-events: auto;
            }

        .modal-content {
            background: var(--bg-light);
            padding: 0;
            border-radius: 24px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            width: 90%;
            max-width: 1100px;
            max-height: 90vh;
            overflow-y: auto;
            position: relative;
            transform: scale(0.95);
            transition: transform 0.3s ease-in-out;
        }

        .modal-overlay:not(.hidden) .modal-content {
            transform: scale(1);
        }

        .modal-close-btn {
            position: absolute;
            top: 15px;
            right: 20px;
            font-size: 2.5rem;
            font-weight: bold;
            color: #a0aec0;
            cursor: pointer;
            transition: color 0.2s ease, transform 0.2s ease;
            z-index: 10;
        }


            .modal-close-btn:hover {
                color: var(--text-light);
                transform: rotate(90deg);
            }

        /* --- FINAL CORRECTED PREVIEW MODAL STYLES --- */
        .preview-header {
            padding: 30px 40px;
            background: var(--bg-gradient);
            color: white;
            border-radius: 24px 24px 0 0;
            position: relative;
        }


            .preview-header h2 {
                font-size: 1.8rem;
                margin: 0;
            }


            .preview-header p {
                opacity: 0.8;
                margin-top: 5px;
            }


        .preview-body-container {
            display: grid;
            grid-template-columns: 320px 1fr;
            align-items: start;
        }

        .preview-sidebar {
            padding: 20px 0 30px 40px; /* Added top padding */
        }

        .preview-main {
            padding: 20px 40px 30px 30px; /* Added top padding */
        }

        .preview-profile {
            text-align: center;
        }

        .preview-photo-container {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            margin: -75px auto 20px; /* Pulls up into header space */
            background: var(--bg-white);
            border: 6px solid var(--bg-white);
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 5rem;
            color: var(--primary-color);
            overflow: hidden;
            position: relative;
            z-index: 5;
        }

        .preview-photo {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .preview-profile h3 {
            font-size: 2rem;
            color: var(--text-dark);
            margin: 0 0 5px 0;
        }

        .preview-profile p {
            color: var(--text-light);
            font-size: 1rem;
            word-break: break-all;
            margin-bottom: 30px;
        }

        .detail-block {
            background: var(--bg-white);
            border: 1px solid var(--border-color);
            border-radius: 16px;
            padding: 25px;
            margin-bottom: 25px;
        }

        .detail-block__title {
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 1.4rem;
            font-weight: 600;
            color: var(--primary-dark);
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #dbe2ef;
        }

        .detail-block__content {
            display: grid;
            gap: 18px;
        }

        .detail-item {
            display: grid;
            grid-template-columns: 140px 1fr;
            align-items: baseline;
            font-size: 0.95rem;
        }

        .detail-label {
            font-weight: 600;
            color: var(--text-medium);
        }

        .detail-value {
            color: var(--text-dark);
            word-break: break-word;
            font-weight: 500;
        }

            .detail-value .not-provided {
                color: #a0aec0;
                font-style: italic;
            }

            .detail-value .tag {
                display: inline-block;
                padding: 4px 12px;
                border-radius: 20px;
                background-color: #e0e7ff;
                color: var(--primary-dark);
                font-weight: 600;
                font-size: 0.9rem;
            }

        .document-list {
            display: grid;
            gap: 15px;
        }

        .document-tile {
            display: flex;
            align-items: center;
            gap: 15px;
            border: 1px solid var(--border-color);
            border-radius: 12px;
            padding: 15px;
            background: var(--bg-white);
            transition: all 0.2s ease;
        }

            .document-tile:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 15px rgba(0,0,0,0.07);
                border-color: var(--primary-color);
            }

        .document-icon {
            font-size: 2.5rem;
            line-height: 1;
        }

        .document-info {
            overflow: hidden;
        }

        .document-name {
            font-weight: 600;
            color: var(--text-medium);
            font-size: 0.9rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            display: block;
        }
        /* Ensure it's a block for ellipsis */
        .document-size {
            font-size: 0.8rem;
            color: var(--text-light);
        }

        .document-not-provided {
            text-align: center;
            padding: 30px;
            color: #a0aec0;
            background-color: transparent;
            border: 2px dashed var(--border-color);
            border-radius: 12px;
        }

        .modal-actions {
            padding: 20px 40px 30px;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: flex-end;
            background: var(--bg-light);
            border-radius: 0 0 24px 24px;
        }

        .edit-btn {
            background: white;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
            padding: 12px 30px;
            font-size: 1rem;
        }

            .edit-btn:hover {
                background: rgba(102, 126, 234, 0.1);
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(102, 126, 234, 0.2);
            }

        /* --- Animations --- */
        @@keyframes float {
            0%, 100% {
                transform: translateY(0);
            }

            50% {
                transform: translateY(-20px);
            }
        }

        @@keyframes slideInUp {
            from {
                transform: translateY(50px);
                opacity: 0;
            }

            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@keyframes pulse {
            0% {
                transform: scale(0.9);
            }

            70% {
                transform: scale(1.1);
            }

            100% {
                transform: scale(0.9);
            }
        }

        @@keyframes expandWidth {
            from {
                width: 0;
            }

            to {
                width: 60px;
            }
        }

        @@keyframes shake {
            0%, 100% {
                transform: translateX(0);
            }

            10%, 30%, 50%, 70%, 90% {
                transform: translateX(-5px);
            }

            20%, 40%, 60%, 80% {
                transform: translateX(5px);
            }
        }

        @@keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
    </style>
</head>
<body>
    <div class="floating-shapes"> <div class="shape"></div> <div class="shape"></div> <div class="shape"></div> </div>
    <div class="container">
        <div class="main-card">
            <div class="header">
                <h1>🎓 Student Registration</h1>
                <p>Winfocus Learning Centre, Kottayam – Excellence in NEET, JEE & CBSE Coaching</p>
            </div>

            <div class="form-container">
                <form id="registrationForm" method="post" enctype="multipart/form-data" novalidate>
                    <!-- PART 1: Student Details -->

                    <div class="section">
                        <h2 class="section-title">✨ Part 1: Student Details & Academic Information</h2>
                        <div class="form-row">
                            <div class="form-group">
                                @Html.HiddenFor(model => model.RegistrationId)

                                <label class="form-label required">Full Name of Student</label>
                                <input type="text" class="form-input" id="fullName" name="fullName" required>
                                <span class="error-message" id="fullNameError"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label required">Gender</label>
                                <div class="radio-group">
                                    <div class="radio-option">
                                        <input type="radio" id="male" name="gender" value="Male" required>
                                        <label for="male" class="radio-label"><span>Male</span></label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="female" name="gender" value="Female">
                                        <label for="female" class="radio-label"><span>Female</span></label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="other" name="gender" value="Other">
                                        <label for="other" class="radio-label"><span>Other</span></label>
                                    </div>
                                </div>
                                <span class="error-message" id="genderError"></span>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label required">Date of Birth</label>
                                <input type="date" class="form-input" id="dob" name="dob" required>
                                <span class="error-message" id="dobError"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label required">Student Mobile Number</label>
                                <input type="tel" class="form-input" id="studentMobile" name="studentMobile" required>
                                <span class="error-message" id="studentMobileError"></span>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label required">Student Email ID</label>
                                <input type="email" class="form-input" id="studentEmail" name="studentEmail" required>
                                <span class="error-message" id="studentEmailError"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label">WhatsApp Number</label>
                                <input type="tel" class="form-input" id="whatsappNumber" name="whatsappNumber">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label required">Academic Board</label>
                                <div class="radio-group">
                                    <div class="radio-option">
                                        <input type="radio" id="cbse" name="board" value="CBSE" required>
                                        <label for="cbse" class="radio-label"><span>CBSE</span></label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="igcse" name="board" value="IGCSE">
                                        <label for="igcse" class="radio-label"><span>IGCSE</span></label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="stateBoard" name="board" value="State Board">
                                        <label for="stateBoard" class="radio-label"><span>State Board</span></label>
                                    </div>
                                </div>
                                <span class="error-message" id="boardError"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label required">Class Currently Studying</label>
                                <div class="radio-group">
                                    <div class="radio-option">
                                        <input type="radio" id="class8" name="currentClass" value="VIII" required>
                                        <label for="class8" class="radio-label"><span>VIII</span></label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="class9" name="currentClass" value="IX">
                                        <label for="class9" class="radio-label"><span>IX</span></label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="class10" name="currentClass" value="X"><label for="class10" class="radio-label">
                                            <span>X</span>
                                        </label>
                                    </div><div class="radio-option">
                                        <input type="radio" id="class11" name="currentClass" value="XI">
                                        <label for="class11" class="radio-label"><span>XI</span></label>
                                    </div><div class="radio-option">
                                        <input type="radio" id="class12" name="currentClass" value="XII">
                                        <label for="class12" class="radio-label"><span>XII</span></label>
                                    </div>
                                </div><span class="error-message" id="currentClassError"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Subject Marks (Previous Exam)</label>
                            <div class="subjects-grid">
                                <div class="subject-card">
                                    <h4>📐 Mathematics</h4>
                                    <div class="subject-inputs">
                                        <input type="number" class="form-input" placeholder="Obtained" id="mathObtained" name="mathObtained">
                                        <input type="number" class="form-input" placeholder="Total" id="mathTotal" name="mathTotal">
                                    </div>
                                </div>
                                <div class="subject-card">
                                    <h4>🧬 Biology</h4>
                                    <div class="subject-inputs">
                                        <input type="number" class="form-input" placeholder="Obtained" id="bioObtained" name="bioObtained">
                                        <input type="number" class="form-input" placeholder="Total" id="bioTotal" name="bioTotal">
                                    </div>
                                </div>
                                <div class="subject-card">
                                    <h4>⚗️ Chemistry</h4>
                                    <div class="subject-inputs">
                                        <input type="number" class="form-input" placeholder="Obtained" id="chemObtained" name="chemObtained">
                                        <input type="number" class="form-input" placeholder="Total" id="chemTotal" name="chemTotal">
                                    </div>
                                </div>
                                <div class="subject-card">
                                    <h4>⚡ Physics</h4>
                                    <div class="subject-inputs">
                                        <input type="number" class="form-input" placeholder="Obtained" id="phyObtained" name="phyObtained">
                                        <input type="number" class="form-input" placeholder="Total" id="phyTotal" name="phyTotal">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label required">Name of Current/Last School</label>
                                <input type="text" class="form-input" id="schoolName" name="schoolName" required>
                                <span class="error-message" id="schoolNameError" name="schoolNameError"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label">School Location</label>
                                <input type="text" class="form-input" id="schoolLocation" name="schoolLocation">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label required">Target Exam</label>
                                <div class="radio-group">
                                    <div class="radio-option">
                                        <input type="radio" id="neet" name="targetExam" value="NEET" required>
                                        <label for="neet" class="radio-label"><span>🩺 NEET</span></label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="jee" name="targetExam" value="JEE">
                                        <label for="jee" class="radio-label"><span>⚙️ JEE</span></label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="cbseSupport" name="targetExam" value="CBSE Support">
                                        <label for="cbseSupport" class="radio-label"><span>📚 CBSE Support</span></label>
                                    </div>
                                </div>
                                <span class="error-message" id="targetExamError"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label required">Target Year of Exam</label>
                                <select class="form-input" id="targetYear" name="targetYear" required>
                                    <option value="">Select Year</option>
                                    <option value="2024">2024</option>
                                    <option value="2025">2025</option>
                                    <option value="2026">2026</option>
                                    <option value="2027">2027</option>
                                    <option value="2028">2028</option>
                                </select>
                                <span class="error-message" id="targetYearError"></span>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label required">Registration Academic Year</label>
                                <select class="form-input" id="academic_year" name="academic_year" required>
                                    <option value="">Select Year</option>
                                </select>
                                <span class="error-message" id="academic-year-Error"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label required">Choose syllabus</label>
                                <select class="form-input" id="syllabus" name="syllabus" required>
                                    <option value="">Select Syllabus</option>
                                </select>
                                <span class="error-message" id="syllabus-Error"></span>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label required">Choose Grade</label>
                                <select class="form-input" id="grade" name="grade" required>
                                    <option value="">Select grade</option>
                                </select>
                                <span class="error-message" id="grade-Error"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label required">Choose Program</label>
                                <select class="form-input" id="program" name="program" required>
                                    <option value="">Select program</option>
                                </select>
                                <span class="error-message" id="program-Error"></span>
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="form-label">Enter Your Dream Career</label>
                            <input type="text" class="form-input" id="dreamCareer" name="dreamCareer" placeholder="e.g., Doctor, Engineer, Scientist">
                        </div>
                    </div>
                    <!-- PART 2: Parent Details -->
                    <div class="section">
                        <h2 class="section-title">👨‍👩‍👧‍👦 Part 2: Parent / Guardian Details</h2>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label required">Name of Parent / Guardian</label>
                                <input type="text" class="form-input" id="parentName" name="parentName" required><span class="error-message" id="parentNameError"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label required">Relationship to Student</label>
                                <div class="radio-group">
                                    <div class="radio-option">
                                        <input type="radio" id="father" name="relationship" value="Father" required>
                                        <label for="father" class="radio-label"><span>Father</span> </label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="mother" name="relationship" value="Mother">
                                        <label for="mother" class="radio-label"><span>Mother</span></label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="otherRelation" name="relationship" value="Other">
                                        <label for="otherRelation" class="radio-label"><span>Other</span></label>
                                    </div>
                                </div><span class="error-message" id="relationshipError"></span>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label required">Parent's Mobile Number</label>
                                <input type="tel" class="form-input" id="parentMobile" name="parentMobile" required><span class="error-message" id="parentMobileError"></span>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Parent's WhatsApp Number</label>
                                <input type="tel" class="form-input" id="parentWhatsapp" name="parentWhatsapp">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Parent's Email ID</label>
                                <input type="email" class="form-input" id="parentEmail" name="parentEmail">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Occupation</label>
                                <input type="text" class="form-input" id="parentOccupation" name="parentOccupation">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Company Name</label>
                                <input type="text" class="form-input" id="companyName" name="companyName">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Work Location</label>
                                <input type="text" class="form-input" id="parentLocation" name="parentLocation">
                            </div>
                        </div>
                        <h3 style="color: var(--primary-color); margin: 30px 0 20px 0; font-weight: 600;">🏠 Permanent Address (India)</h3>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Home Address</label>
                                <input type="text" class="form-input" id="homeAddress" name="homeAddress">
                            </div><div class="form-group">
                                <label class="form-label">Location</label>
                                <input type="text" class="form-input" id="permanentLocation" name="permanentLocation">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Post Office</label>
                                <input type="text" class="form-input" id="postOffice" name="postOffice">
                            </div>
                            <div class="form-group">
                                <label class="form-label">District</label>
                                <input type="text" class="form-input" id="district" name="district">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="form-label">State</label>
                            <input type="text" class="form-input" id="state" name="state">
                        </div>
                    </div>
                    <!-- Document Upload Section -->
                    <div class="section">
                        <h2 class="section-title">📄 Document Upload Section</h2>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Student Photo</label>
                                <div class="file-upload">
                                    <input type="file" id="studentPhoto" name="studentPhoto" accept="image/jpeg,image/png">
                                    <label for="studentPhoto" class="file-upload-label">📷 Upload Photo (JPEG/PNG)</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="form-label">ID Proof</label>
                                <div class="file-upload">
                                    <input type="file" id="idProof" name="idProof" accept=".jpg,.jpeg,.png,.pdf">
                                    <label for="idProof" class="file-upload-label">🆔 Upload Aadhar/Passport</label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Previous School Report Card</label>
                            <div class="file-upload">
                                <input type="file" id="reportCard" name="reportCard" accept=".jpg,.jpeg,.png,.pdf">
                                <label for="reportCard" class="file-upload-label">📊 Upload Report Card</label>
                            </div>
                        </div>
                    </div>
                    <!-- Declaration -->
                    <div class="section">
                        <h2 class="section-title">📜 Declaration & Agreement</h2>
                        <div class="checkbox-group"><div class="checkbox-option"><input type="checkbox" id="declaration1" required><label for="declaration1" class="checkbox-label">I hereby declare that all information provided is true and complete. I understand that the registration fee is non-refundable and any false information may lead to cancellation of admission.</label><span class="error-message" id="declaration1Error"></span></div><div class="checkbox-option"><input type="checkbox" id="declaration2" required><label for="declaration2" class="checkbox-label">I agree to abide by all rules, regulations, and code of conduct of Winfocus Learning Centre, Kottayam. I understand that violation of any rules may result in disciplinary action.</label><span class="error-message" id="declaration2Error"></span></div><div class="checkbox-option"><input type="checkbox" id="declaration3" required><label for="declaration3" class="checkbox-label">I consent to receive academic updates, administrative communications, study materials, and notifications via WhatsApp, Email, and SMS for the duration of the course.</label><span class="error-message" id="declaration3Error"></span></div></div>
                        <div class="form-group" style="margin-top: 30px;"><label class="form-label">Registration Date:</label><div class="date-display" id="currentDate"></div></div>
                        <div class="button-container"><button type="button" class="preview-btn" id="previewBtn">🔍 Preview Application</button><button type="submit" class="submit-btn" id="submitBtn"><span id="submitText">🚀 Submit Registration</span><span id="loadingSpinner" class="loading hidden"></span></button></div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- PREVIEW MODAL -->
    <div id="previewModal" class="modal-overlay hidden">
        <div class="modal-content">
            <span class="modal-close-btn" id="closePreviewBtn">&times;</span>
            <div id="previewDataContainer">
                <!-- Dynamic content will be injected here by JavaScript -->
            </div>
        </div>
    </div>

    <script>

        // Load academic years from database
        async function loadAcademicYears() {
            try {
                const response = await fetch('/api/ManagementApi/FetchAccademicYear');
                const data = await response.json();

                const dropdownIds = ['academic_year'];

                dropdownIds.forEach(id => {
                    const dropdown = document.getElementById(id);
                    dropdown.innerHTML = '<option value="">-- Select Academic Year --</option>';

                    data.forEach(year => {
                        const option = document.createElement('option');
                        option.value = year.Id;
                        option.textContent = year.AccademicYear;
                        dropdown.appendChild(option);
                    });
                });
            } catch (error) {
                showNotification('Failed to load academic years', 'error');
                console.error('Error loading academic years:', error);
            }
        }


        document.addEventListener('DOMContentLoaded', function () {

            loadAcademicYears();
            // --- DOM Elements ---
            const form = document.getElementById('registrationForm');
            const previewBtn = document.getElementById('previewBtn');
            const submitBtn = document.getElementById('submitBtn');
            const previewModal = document.getElementById('previewModal');
            const closePreviewBtn = document.getElementById('closePreviewBtn');
            const previewDataContainer = document.getElementById('previewDataContainer');
            const declarationCheckboxes = document.querySelectorAll('input[id^="declaration"]');

            let studentPhotoUrl = null;

            // --- Initial State Setup ---
            document.getElementById('currentDate').textContent = new Date().toLocaleDateString('en-IN', {
                weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'
            });
            submitBtn.disabled = true;

            // --- Helper Functions ---
            const escapeHTML = (str) => str.toString().replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;');
            const getValue = (id) => document.getElementById(id).value.trim();
            const getRadioValue = (name) => {
                const checked = document.querySelector(`input[name="${name}"]:checked`);
                return checked ? checked.value : null;
            };
            const getFile = (id) => document.getElementById(id).files[0];

            const displayError = (id, message) => {
                const errorElement = document.getElementById(`${id}Error`);
                if (errorElement) {
                    errorElement.textContent = message;
                    errorElement.style.display = 'block';
                }
            };

            const clearErrors = () => {
                document.querySelectorAll('.error-message').forEach(el => {
                    el.textContent = '';
                    el.style.display = 'none';
                });
            };

            // --- Declaration & File Shortening Logic ---
            const checkDeclarations = () => {
                const allChecked = Array.from(declarationCheckboxes).every(cb => cb.checked);
                submitBtn.disabled = !allChecked;
            };

            const shortenFilename = (name, startChars = 12, endChars = 12) => {
                if (name.length <= startChars + endChars) {
                    return name;
                }
                const extensionIndex = name.lastIndexOf('.');
                const nameWithoutExt = extensionIndex !== -1 ? name.substring(0, extensionIndex) : name;
                const extension = extensionIndex !== -1 ? name.substring(extensionIndex) : '';

                if (nameWithoutExt.length <= startChars + endChars) {
                    return name;
                }

                const start = nameWithoutExt.substring(0, startChars);
                const end = nameWithoutExt.substring(nameWithoutExt.length - endChars);
                return `${start}...${end}${extension}`;



            };

            // --- Form Validation ---
            const validateForm = () => {
                clearErrors();
                let isValid = true;
                // ... (validation logic is unchanged and correct)
                const requiredFields = [{ id: 'fullName', name: 'Full Name' }, { id: 'dob', name: 'Date of Birth' }, { id: 'studentMobile', name: 'Student Mobile' }, { id: 'studentEmail', name: 'Student Email' }, { id: 'schoolName', name: 'School Name' }, { id: 'parentName', name: 'Parent Name' }, { id: 'parentMobile', name: 'Parent Mobile' }, { id: 'targetYear', name: 'Target Year' }]; requiredFields.forEach(field => { if (!getValue(field.id)) { displayError(field.id, `${field.name} is required.`); isValid = false; } }); const radioGroups = [{ name: 'gender', message: 'Please select gender' }, { name: 'board', message: 'Please select academic board' }, { name: 'currentClass', message: 'Please select current class' }, { name: 'targetExam', message: 'Please select target exam' }, { name: 'relationship', message: 'Please select relationship' }]; radioGroups.forEach(group => { if (!getRadioValue(group.name)) { displayError(group.name, group.message); isValid = false; } }); if (getValue('studentEmail') && !/^\S+@@\S+\.\S+$/.test(getValue('studentEmail'))) { displayError('studentEmail', 'Please enter a valid email address.'); isValid = false; }
                ['studentMobile', 'parentMobile'].forEach(id => { const phoneValue = getValue(id); if (phoneValue && !/^[0-9]{10}$/.test(phoneValue)) { displayError(id, 'Please enter a valid 10-digit mobile number.'); isValid = false; } }); for (let i = 1; i <= 3; i++) { if (!document.getElementById(`declaration${i}`).checked) { displayError(`declaration${i}`, 'You must agree to this declaration.'); isValid = false; } }
                if (!isValid) { const firstError = document.querySelector('.error-message[style*="block"]'); if (firstError) { firstError.parentElement.scrollIntoView({ behavior: 'smooth', block: 'center' }); } }
                return isValid;
            };

            // --- ENHANCED PREVIEW LOGIC ---
            const createDetailItem = (label, value, isTag = false) => {
                const notProvided = '<span class="not-provided">Not Provided</span>';
                const val = value ? escapeHTML(value) : notProvided;
                const valueHTML = (isTag && value) ? `<span class="tag">${val}</span>` : val;
                return `<div class="detail-item"><div class="detail-label">${label}</div><div class="detail-value">${valueHTML}</div></div>`;
            };

            const createDocumentTile = (fileId) => {
                const file = getFile(fileId);
                if (!file) return null;

                let icon = '📁';
                if (file.type.startsWith('image/')) icon = '🖼️';
                else if (file.type === 'application/pdf') icon = '📄';

                const shortName = shortenFilename(file.name);
                const fullName = escapeHTML(file.name);

                return `
                            <div class="document-tile">
                                <div class="document-icon">${icon}</div>
                                <div class="document-info">
                                    <div class="document-name" title="${fullName}">${escapeHTML(shortName)}</div>
                                    <div class="document-size">${(file.size / 1024).toFixed(1)} KB</div>
                                </div>
                            </div>`;
            };

            const showPreview = () => {
                if (!validateForm()) {
                    alert('Please fix the errors before previewing.');
                    return;
                }
                if (studentPhotoUrl) URL.revokeObjectURL(studentPhotoUrl);

                let photoHTML = '👤';
                const photoFile = getFile('studentPhoto');
                if (photoFile) {
                    studentPhotoUrl = URL.createObjectURL(photoFile);
                    photoHTML = `<img src="${studentPhotoUrl}" alt="Student Photo" class="preview-photo">`;
                }

                const documentTiles = [
                    createDocumentTile('studentPhoto'), createDocumentTile('idProof'), createDocumentTile('reportCard')
                ].filter(Boolean).join('');
                const documentsHTML = documentTiles || '<div class="document-not-provided">No documents were uploaded.</div>';

                const marksHTML = [
                    { s: 'Mathematics', o: 'mathObtained', t: 'mathTotal' },
                    { s: 'Biology', o: 'bioObtained', t: 'bioTotal' },
                    { s: 'Chemistry', o: 'chemObtained', t: 'chemTotal' },
                    { s: 'Physics', o: 'phyObtained', t: 'phyTotal' }
                ].map(m => {
                    const obtained = getValue(m.o);
                    const total = getValue(m.t);
                    return (obtained && total) ? createDetailItem(m.s, `${obtained} / ${total}`) : '';
                }).join('');

                previewDataContainer.innerHTML = `
                            <div class="preview-header">
                                <h2>Application Summary</h2>
                                <p>Please review your details carefully before final submission.</p>
                            </div>

                            <div class="preview-body-container">
                                <aside class="preview-sidebar">
                                    <div class="preview-profile">
                                        <div class="preview-photo-container">${photoHTML}</div>
                                        <h3>${escapeHTML(getValue('fullName')) || 'Student Name'}</h3>
                                        <p>${escapeHTML(getValue('studentEmail')) || 'No Email Provided'}</p>
                                    </div>
                                    <div class="detail-block">
                                        <div class="detail-block__title">📄 Uploaded Documents</div>
                                        <div class="document-list">
                                            ${documentsHTML}
                                        </div>
                                    </div>
                                </aside>

                                <main class="preview-main">
                                    <div class="detail-block">
                                        <div class="detail-block__title">👤 Personal & Contact</div>
                                        <div class="detail-block__content">
                                            ${createDetailItem('Gender', getRadioValue('gender'), true)}
                                            ${createDetailItem('Date of Birth', getValue('dob'))}
                                            ${createDetailItem('Mobile Number', getValue('studentMobile'))}
                                            ${createDetailItem('WhatsApp Number', getValue('whatsappNumber'))}
                                        </div>
                                    </div>
                                    <div class="detail-block">
                                        <div class="detail-block__title">🎓 Academic Information</div>
                                        <div class="detail-block__content">
                                            ${createDetailItem('Current School', getValue('schoolName'))}
                                            ${createDetailItem('School Location', getValue('schoolLocation'))}
                                            ${createDetailItem('Board', getRadioValue('board'), true)}
                                            ${createDetailItem('Current Class', getRadioValue('currentClass'), true)}
                                            ${createDetailItem('Target Exam', getRadioValue('targetExam'), true)}
                                            ${createDetailItem('Target Year', getValue('targetYear'))}
                                            ${createDetailItem('Dream Career', getValue('dreamCareer'))}
                                        </div>
                                    </div>
                                    <div class="detail-block">
                                        <div class="detail-block__title">👨‍👩‍👧‍👦 Parent / Guardian</div>
                                        <div class="detail-block__content">
                                            ${createDetailItem('Name', getValue('parentName'))}
                                            ${createDetailItem('Relationship', getRadioValue('relationship'), true)}
                                            ${createDetailItem('Mobile', getValue('parentMobile'))}
                                            ${createDetailItem('Email', getValue('parentEmail'))}
                                            ${createDetailItem('Occupation', getValue('parentOccupation'))}
                                        </div>
                                    </div>
                                    <div class="detail-block">
                                        <div class="detail-block__title">📊 Subject Marks</div>
                                        <div class="detail-block__content">
                                            ${marksHTML || '<div class="detail-item"><span class="not-provided">No subject marks were provided.</span></div>'}
                                        </div>
                                    </div>
                                </main>
                            </div>
                            <div class="modal-actions">
                                <button type="button" class="edit-btn" id="editDetailsBtn">✏️ Edit Details</button>
                            </div>
                        `;

                document.getElementById('editDetailsBtn').addEventListener('click', hidePreview);
                previewModal.classList.remove('hidden');
            };

            const hidePreview = () => {
                previewModal.classList.add('hidden');
                if (studentPhotoUrl) {
                    URL.revokeObjectURL(studentPhotoUrl);
                    studentPhotoUrl = null;
                }
                previewDataContainer.innerHTML = '';
            };

            // --- Event Listeners ---
            declarationCheckboxes.forEach(cb => cb.addEventListener('change', checkDeclarations));
            previewBtn.addEventListener('click', showPreview);
            closePreviewBtn.addEventListener('click', hidePreview);
            previewModal.addEventListener('click', (e) => { if (e.target === previewModal) hidePreview(); });
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                if (!validateForm()) return;

                const submitText = document.getElementById('submitText');
                const loadingSpinner = document.getElementById('loadingSpinner');

                const form = document.getElementById("registrationForm");
                form.submit(); // Submits the form

                submitText.classList.add('hidden');
                loadingSpinner.classList.remove('hidden');
                submitBtn.disabled = true;

                setTimeout(() => {
                    submitBtn.style.background = 'var(--success-color)';
                    submitText.textContent = '✅ Submitted Successfully!';
                    submitText.classList.remove('hidden');
                    loadingSpinner.classList.add('hidden');
                  //  alert('🎉 Registration submitted successfully! You will receive a confirmation email shortly.');
                }, 2000);
            });
            document.querySelectorAll('input[type="file"]').forEach(input => {
                input.addEventListener('change', function () {
                    const label = this.nextElementSibling;
                    if (this.files.length > 0) {
                        label.textContent = `✅ ${this.files[0].name}`;
                        label.style.color = 'var(--success-color)';
                        label.style.borderColor = 'var(--success-color)';
                    } else {
                        const originalText = { studentPhoto: "📷 Upload Photo (JPEG/PNG)", idProof: "🆔 Upload Aadhar/Passport", reportCard: "📊 Upload Report Card" }[this.id];
                        label.textContent = originalText;
                        label.style.color = ''; label.style.borderColor = '';
                    }
                });
            });
        });



        function loadSyllabusOptions(academicYearId, targetSelectId) {
            if (!academicYearId) return;
            //showNotification('Failed to load academic years'+academicYearId, 'error');
            fetch(`/api/ManagementApi/FetchSyllabus/${academicYearId}`)
                .then(response => response.json())
                .then(data => {
                    const select = document.getElementById(targetSelectId);
                    select.innerHTML = '<option value="">-- Select Syllabus --</option>';
                    data.forEach(syllabus => {
                        const option = document.createElement('option');
                        option.value = syllabus.Id;
                        option.textContent = syllabus.Name || syllabus.Name.substring(0, 50) + '...';
                        select.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error loading syllabus:', error);
                    showNotification('Failed to load syllabus', 'error');
                });
        }

        // Load class data when syllabus is selected
        function loadClassOptions(SLBID, targetSelectId) {
            if (!SLBID) return;
            //showNotification('Failed to load academic years'+academicYearId, 'error');
            fetch(`/api/ManagementApi/FetchGrade/${SLBID}`)
                .then(response => response.json())
                .then(data => {
                    const select = document.getElementById(targetSelectId);
                    select.innerHTML = '<option value="">-- Select Syllabus --</option>';
                    data.forEach(fetchedData => {
                        const option = document.createElement('option');
                        option.value = fetchedData.Id;
                        option.textContent = fetchedData.Name || fetchedData.Name.substring(0, 50) + '...';
                        select.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error loading syllabus:', error);
                    showNotification('Failed to load syllabus', 'error');
                });
        }

        // Load Stream data when grade is selected
        function loadStreamOptions(classId, targetSelectId) {
            if (!classId) return;
            //showNotification('Failed to load academic years'+academicYearId, 'error');
            fetch(`/api/ManagementApi/FetchStream/${classId}`)
                .then(response => response.json())
                .then(data => {
                    const select = document.getElementById(targetSelectId);
                    select.innerHTML = '<option value="">-- Select Syllabus --</option>';
                    data.forEach(fetchedData => {
                        const option = document.createElement('option');
                        option.value = fetchedData.Id;
                        option.textContent = fetchedData.Name || fetchedData.Name.substring(0, 50) + '...';
                        select.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error loading syllabus:', error);
                    showNotification('Failed to load syllabus', 'error');
                });
        }

        // Event listeners for accademic year dropdowns form
        document.getElementById('academic_year').addEventListener('change', function () {
            loadSyllabusOptions(this.value, 'syllabus');
        });

        // Event listeners for accademic year dropdowns form
        document.getElementById('syllabus').addEventListener('change', function () {
            loadClassOptions(this.value, 'grade');
        });

        // Event listeners for grade dropdowns form
        document.getElementById('grade').addEventListener('change', function () {
            loadStreamOptions(this.value, 'program');
        });


    </script>
</body>
</html>